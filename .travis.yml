---
language: node_js
node_js: "6"
dist: trusty
sudo: false
before_install:
    - export DISPLAY=:99.0
    - sh -e /etc/init.d/xvfb start
env:
  - ESHOST_TARGET=node
  - ESHOST_TARGET=firefox
  - ESHOST_TARGET=chakra
  - ESHOST_TARGET=jsshell
  - ESHOST_TARGET=chrome
  - ESHOST_TARGET=remote
install: |
    export ESHOST_SKIP_D8=1
    export ESHOST_SKIP_JSC=1
    export ESHOST_SKIP_CHROME=1
    export ESHOST_SKIP_FIREFOX=1
    export ESHOST_SKIP_JSSHELL=1
    export ESHOST_SKIP_CH=1
    export ESHOST_SKIP_NODE=1
    export ESHOST_SKIP_REMOTE=1
    export ESHOST_SKIP_EDGE=1

    function install_firefox {
      export TMP=$(mktemp);
      wget https://archive.mozilla.org/pub/firefox/nightly/2017/07/2017-07-07-10-01-38-mozilla-central/firefox-56.0a1.en-US.linux-x86_64.tar.bz2 -O $TMP;
      tar -xvf $TMP;
      wget https://github.com/mozilla/geckodriver/releases/download/v0.17.0/geckodriver-v0.17.0-linux64.tar.gz -O $TMP;
      tar --directory firefox -xvf $TMP;
      rm $TMP;
      unset TMP;
    }

    if [[ "$ESHOST_TARGET" == "node" ]]; then
      unset ESHOST_SKIP_NODE;
    elif [[ "$ESHOST_TARGET" == "firefox" ]]; then
      install_firefox;
      export PATH=$(pwd)/firefox:$PATH;
      unset ESHOST_SKIP_FIREFOX;
    elif [[ "$ESHOST_TARGET" == "jsshell" ]]; then
      export TMP=$(mktemp);
      wget https://archive.mozilla.org/pub/firefox/nightly/2017/07/2017-07-07-10-01-38-mozilla-central/jsshell-linux-x86_64.zip -O $TMP;
      mkdir jsshell;
      unzip -d jsshell $TMP;
      rm $TMP;
      unset TMP;
      export PATH=$PATH:$(pwd)/jsshell;
      unset ESHOST_SKIP_JSSHELL;
    elif [[ "$ESHOST_TARGET" == "chakra" ]]; then
      wget https://aka.ms/chakracore/cc_linux_x64_1_5_2;
      tar -xvf cc_linux_x64_1_5_2;
      export PATH=$PATH:$(pwd)/ChakraCoreFiles/bin;
      unset ESHOST_SKIP_CH;
    elif [[ "$ESHOST_TARGET" == "chrome" ]]; then
      channel=unstable
      deb_archive=google-chrome-${channel}_current_amd64.deb
      wget https://dl.google.com/linux/direct/$deb_archive

      # If the environment provides an installation of Google Chrome, the
      # existing binary may take precedence over the one introduced in this
      # script. Remove any previously-existing "alternatives" prior to
      # installation in order to ensure that the new binary is installed as
      # intended.
      if sudo update-alternatives --list google-chrome; then
        sudo update-alternatives --remove-all google-chrome
      fi

      # Installation will fail in cases where the package has unmet dependencies.
      # When this occurs, attempt to use the system package manager to fetch the
      # required packages and retry.
      if ! sudo dpkg --install $deb_archive; then
        sudo apt-get install --fix-broken
        sudo dpkg --install $deb_archive
      fi

      mkdir chrome
      ln -s $(which google-chrome) chrome/chrome

      wget https://chromedriver.storage.googleapis.com/2.30/chromedriver_linux64.zip
      unzip -d chrome chromedriver_linux64.zip
      PATH=$PATH:$(pwd)/chrome
      unset ESHOST_SKIP_CHROME;
    elif [[ "$ESHOST_TARGET" == "remote" ]]; then
      install_firefox;
      wget http://selenium-release.storage.googleapis.com/3.4/selenium-server-standalone-3.4.0.jar
      PATH=$PATH:$(pwd)/firefox java -jar selenium-server-standalone-3.4.0.jar &> selenium-server.log &

      unset ESHOST_SKIP_REMOTE;
    else
      exit 1;
    fi

    npm install
after_script: |
    if [[ "$ESHOST_TARGET" == "remote" ]]; then
      cat selenium-server.log
    fi
